{"version":3,"sources":["NavBar.js","HomePage.js","App.js","serviceWorker.js","index.js","Corgeek.jpg"],"names":["theme","createMuiTheme","palette","primary","main","secondary","overrides","MuiAppbar","root","position","color","MuiButton","borderRadius","border","height","padding","fontWeight","fontSize","fontFamily","NewNavBar","react_default","a","createElement","styles","AppBar_default","style","background","boxShadow","Toolbar_default","Grid_default","container","direction","justify","item","med","Button_default","component","Link","to","React","Component","outerContainer","backgroundImage","concat","Background","backgroundSize","backgroundRepeat","backgroundPosition","text","HomePage","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","alignItems","NavBar_NewNavBar","App","BrowserRouter","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7591ec6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport Background from './Corgeek.jpg';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main:'#FAFAFA' }, // Purple and green play nicely together.\r\n    secondary: { main: '#EEEEEE' }, // This is just green.A700 as hex.\r\n  },\r\n  \r\n    overrides:{\r\n     MuiAppbar:{\r\n      root:{\r\n        position: 'relative',\r\n        color:'primary',\r\n      },\r\n     },\r\n\r\n     MuiButton: {\r\n      root:{\r\n        //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        fontWeight: 550,\r\n        fontSize: 20,\r\n        fontFamily: 'sans-serif',\r\n        },\r\n      },\r\n  },\r\n});\r\n\r\n\r\nexport default class NewNavBar extends React.Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n      <MuiThemeProvider theme={theme}>\r\n\r\n      <AppBar style={{ background: '#FAFAFA', boxShadow:'20%'}}>\r\n            <Toolbar>\r\n                <Grid container direction=\"row\" justify=\"space-between\">\r\n                  <Grid item med={3}>\r\n                      <Button component={Link} to=\"/\">\r\n                         Psypher Image Here\r\n                      </Button>\r\n                  </Grid>\r\n                    \r\n                  <Grid item med={3}>\r\n                    <Button component={Link} to=\"/\">\r\n                       Home\r\n                    </Button>\r\n\r\n                    <Button component={Link} to=\"/About\">\r\n                       About\r\n                    </Button>\r\n\r\n                    <Button component={Link} to=\"/Partners\">\r\n                       Partners\r\n                    </Button>\r\n\r\n                    <Button component={Link} to=\"/Workshops\">\r\n                       Workshops\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n           </AppBar>\r\n           </MuiThemeProvider>\r\n           </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Background from './Corgeek.jpg';\r\nimport NavBar from './NavBar';\r\n//import Image from 'material-ui-image'\r\n\r\n\r\nconst styles= {\r\n\touterContainer: {\r\n\t\tbackgroundImage: `url(${Background})`,\r\n\t\tbackgroundSize:'fit',\r\n\t\tbackgroundRepeat:'no-repeat',\r\n\t\tbackgroundPosition:'center',\r\n\t\theight:\"30vh\",\r\n\t},\r\n\ttext: {        \r\n\t\tborderRadius: 3,\r\n        border: 0,\r\n        color: 'black',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        background:\"white\",\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        fontWeight: 500,\r\n     \tfontSize: 48,\r\n      \tfontFamily: 'sans-serif',\r\n\t},\r\n}\r\n\r\nconst theme = createMuiTheme({\t\t});\r\n\r\nexport class HomePage extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={styles.outerContainer} med={12}>\r\n\t\t\t\t<NavBar />\r\n\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\nimport NavBar from './NavBar';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\n\nimport {HomePage} from './HomePage';\n\nclass App extends Component {\n  render() {\n    return (\n    <Router>\n      <div >            \n          <Route exact path=\"/\" component={HomePage} />\n      </div>\n    </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Corgeek.4ab31dc4.jpg\";"],"sourceRoot":""}